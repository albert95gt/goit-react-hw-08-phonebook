{"version":3,"file":"static/js/781.090e897d.chunk.js","mappings":"qPAKe,SAASA,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,SAAaC,GAAc,YACzDC,GAAeC,EAAAA,EAAAA,MAAfD,WAMFE,GAAY,QAChBC,QAAS,YACTC,MAAO,YACPC,QAPmB,WACnBL,MAOGD,GAGL,OAAO,SAAC,KAAD,kBAAYG,GAAZ,aAA2BJ,O,wICfrB,SAASQ,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,KAASR,GAAc,YACrD,GAAsBS,EAAAA,EAAAA,IAASD,GAA/B,eAAOE,EAAP,KAAcC,EAAd,KACMC,GAAe,0BAChBF,GACAV,GAFgB,IAGnBa,WAAW,EACXT,QAAS,aAOX,OAJIO,GAAQA,EAAKG,SAAWH,EAAKI,QAC/BH,EAAgBG,OAAQ,EACxBH,EAAgBI,WAAaL,EAAKI,QAE7B,SAAC,KAAD,UAAeH,M,sHCfxB,GAAeK,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kJACD,a,4DCKW,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAQXC,EAAkBC,EAAAA,KAAaC,MAAM,CACzCjB,KAAMgB,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaG,MAAM,iBAAiBD,SAAS,YACpDE,SAAUJ,EAAAA,KACPE,SAAS,8BACTG,QACC,iEACA,wGAIN,OACE,+BACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,SAACD,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,SAAC,KAAD,CACEC,cAvBe,CACzB5B,KAAM,GACNmB,MAAO,GACPC,SAAU,IAqBAS,iBAAkBd,EAClBe,SAAU,cAA+C,IAA5C9B,EAA2C,EAA3CA,KAAMmB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UACtClB,EAASmB,EAAAA,EAAAA,SAAwB,CAAEhC,KAAAA,EAAMmB,MAAAA,EAAOC,SAAAA,KAChDW,KALJ,UAQE,SAAC,KAAD,WACE,UAACT,EAAA,GAAD,CAAMC,WAAS,EAACU,QAAS,EAAzB,WACE,SAACX,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,SAACS,EAAA,EAAD,0BAGF,SAACZ,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEU,KAAK,QACLtC,MAAM,YACNG,KAAK,OACLoC,MAAM,YAIV,SAACd,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEY,KAAK,QACLxC,MAAM,YACNG,KAAK,QACLmC,KAAK,QACLC,MAAM,aAIV,SAACd,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACE5B,MAAM,YACNwC,KAAK,WACLrC,KAAK,WACLmC,KAAK,QACLC,MAAM,gBAIV,SAACd,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,SAACa,EAAA,EAAD,CAAQH,KAAK,SAASI,WAAW,SAACC,EAAD,IAAjC,uCC5EL,SAASC,IACtB,OACE,2BACE,SAAC7B,EAAD","sources":["components/Button/Button.jsx","components/FormsUI/Forms.jsx","../node_modules/@mui/icons-material/esm/PersonAdd.js","components/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n\nimport React from 'react';\n\nexport default function ButtonWrapper({ children, ...otherProps }) {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  };\n\n  const buttonConfig = {\n    variant: 'contained',\n    color: 'secondary',\n    onClick: handleSubmit,\n    ...otherProps,\n  };\n\n  return <Button {...buttonConfig}>{children}</Button>;\n}\n","import { TextField } from '@mui/material';\nimport { useField } from 'formik';\nimport React from 'react';\n\nexport default function Forms({ name, ...otherProps }) {\n  const [field, mata] = useField(name);\n  const configTextField = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n  return <TextField {...configTextField} />;\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');","import { Container, Grid, Typography } from '@mui/material';\nimport { PersonAdd } from '@mui/icons-material';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from './FormsUI/Forms';\nimport Button from './Button/Button';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const INITIAL_FORM_STATE = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const FORM_VALIDATION = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string()\n      .required('Please Enter your password')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\n      ),\n  });\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={10}>\n          <Container maxWidth=\"md\">\n            <Formik\n              initialValues={INITIAL_FORM_STATE}\n              validationSchema={FORM_VALIDATION}\n              onSubmit={({ name, email, password }, { resetForm }) => {\n                dispatch(authOperations.register({ name, email, password }));\n                resetForm();\n              }}\n            >\n              <Form>\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <Typography>Register</Typography>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      size=\"small\"\n                      color=\"secondary\"\n                      name=\"name\"\n                      label=\"Name\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      type=\"email\"\n                      color=\"secondary\"\n                      name=\"email\"\n                      size=\"small\"\n                      label=\"Email\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      color=\"secondary\"\n                      type=\"password\"\n                      name=\"password\"\n                      size=\"small\"\n                      label=\"Password\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={1}>\n                    <Button size=\"medium\" startIcon={<PersonAdd />}>\n                      Register\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            </Formik>\n          </Container>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import RegisterForm from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <main>\n      <RegisterForm />\n    </main>\n  );\n}\n"],"names":["ButtonWrapper","children","otherProps","submitForm","useFormikContext","buttonConfig","variant","color","onClick","Forms","name","useField","field","mata","configTextField","fullWidth","touched","error","helperText","createSvgIcon","_jsx","d","RegisterForm","dispatch","useDispatch","FORM_VALIDATION","Yup","shape","required","email","password","matches","Grid","container","item","xs","Container","maxWidth","initialValues","validationSchema","onSubmit","resetForm","authOperations","spacing","Typography","size","label","type","Button","startIcon","PersonAdd","RegisterPage"],"sourceRoot":""}