{"version":3,"file":"static/js/905.a67ce43e.chunk.js","mappings":"iPAuCA,EAjCoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACbC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAClB,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAOxB,OACE,2BACE,4BAAOJ,EAAP,QACA,0BAAOC,KACP,oBAAQI,KAAK,SAASC,QATE,WAC1BH,EAAcJ,GACdQ,MAAM,WAAD,OAAYP,EAAZ,4BAOiDQ,SAAUJ,EAA9D,mBAEGA,GACC,SAAC,IAAD,CAAYK,KAAK,OAAOC,MAAM,UAE9B,SAAC,MAAD,CAAiBA,MAAM,UAAUD,KAAM,Y,6BCVjD,EAL0B,CACxBE,UAVgB,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,OAWtCC,mBATyB,SAACC,EAAUH,GACpC,IAAMI,EAAmBJ,EAAOK,cAChC,OAAOF,EAASH,QAAO,qBAAGb,KACnBkB,cAAcC,SAASF,QCyBhC,EAvBoB,WAClB,IAAMJ,GAASO,EAAAA,EAAAA,IAAYC,EAAAA,WAE3B,GAAiCC,EAAAA,EAAAA,SAAoBC,EAAW,CAC9DC,iBAAkB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAT,MAA2B,CAC3CV,SAAUS,EAAOJ,EAAAA,mBAAqCI,EAAMZ,GAAU,GACtEa,WAAAA,IAEFC,2BAA2B,IALrBX,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,WAQlB,OACE,0BACGA,IAAc,SAAC,IAAD,CAAchB,MAAM,YACjCgB,GACAV,GACAA,EAASY,KAAI,SAAA9B,GACX,OAAO,SAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQC,W,iDC0D3C,EAzEoB,WAClB,OAAwB8B,EAAAA,EAAAA,UAAS,IAAjC,eAAO7B,EAAP,KAAa8B,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe8B,EAAf,KACQN,GAASH,EAAAA,EAAAA,MAATG,KACR,GAAqBO,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAgB,SAAAC,GACpB,IAAMnC,EAAOmC,EAAMC,cAAcpC,KAC3BqC,EAAaF,EAAMG,OAAOxB,MAEhC,OAAQd,GACN,IAAK,OACH8B,EAAQO,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAIAE,EAAY,mCAAG,WAAMJ,GAAN,wEACnBA,EAAMK,iBADa,SAGSf,EAAKgB,MAAK,SAAA3C,GACpC,OAAOA,EAAQE,KAAKkB,cAAcC,SAASnB,EAAKkB,kBAJ/B,yCAOjBwB,EAAAA,GAAAA,MAAA,UAAe1C,EAAf,8BAPiB,0CAWbiC,EAAW,CAAEjC,KAAAA,EAAMC,OAAAA,IAXN,OAYnByC,EAAAA,GAAAA,QAAA,UAAiB1C,EAAjB,gCAEA8B,EAAQ,IACRC,EAAU,IAfS,4CAAH,sDAkBlB,OACE,kBAAMY,SAAUJ,EAAcK,aAAa,MAA3C,WACE,kBAAOC,QAAQ,OAAf,mBACA,kBACExC,KAAK,OACLL,KAAK,OACLc,MAAOd,EACPD,GAAG,OACH+C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUf,KAEZ,kBAAOW,QAAQ,SAAf,qBACA,kBACExC,KAAK,MACLL,KAAK,SACLc,MAAOb,EACPF,GAAG,SACH+C,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUf,KAEZ,oBAAQ7B,KAAK,SAAb,yBAEE,SAAC,MAAD,CAAiBK,MAAM,UAAUD,KAAM,Y,oBCpD/C,EAnBe,WACb,IAAMyC,GAAWC,EAAAA,EAAAA,MACXC,GAAoBC,EAAAA,EAAAA,KAAqB,SAAAvC,GAC7CoC,GAASI,EAAAA,EAAAA,GAAaxC,MACrB,KAEH,OACE,iCACE,kBAAO+B,QAAQ,SAAf,qCACA,kBACExC,KAAK,OACLL,KAAK,SACLD,GAAG,SACHkD,SAAU,SAAAM,GAAC,OAAIH,EAAkBG,EAAEjB,OAAOxB,cCdnC,SAAS0C,IACtB,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/ContactItem.jsx","redux/contacts/contactsSelectors.js","components/ContactList.jsx","components/ContactForm.jsx","components/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactApi';\n// import { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { MdDeleteForever } from 'react-icons/md';\n\nconst ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    alert(`Contact ${name} successfully deleted!`);\n  };\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button type=\"button\" onClick={handleDeleteContact} disabled={isLoading}>\n        Delete\n        {isLoading ? (\n          <ClipLoader size=\"20px\" color=\"aqua\" />\n        ) : (\n          <MdDeleteForever color=\"#f69d3c\" size={22} />\n        )}\n      </button>\n    </li>\n  );\n};\n\n// ContactItem.propTypes = {\n//   contact: PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//     name: PropTypes.string.isRequired,\n//     phone: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n\nexport default ContactItem;\n","const getFilter = state => state.filter.value;\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst contactsSelectors = {\n  getFilter,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","import ContactItem from './ContactItem';\nimport BounceLoader from 'react-spinners/BounceLoader';\n\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactApi';\nimport { contactsSelectors } from 'redux/contacts';\n\nconst ContactList = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const { contacts, isFetching } = useGetContactsQuery(undefined, {\n    selectFromResult: ({ data, isFetching }) => ({\n      contacts: data ? contactsSelectors.getVisibleContacts(data, filter) : [],\n      isFetching,\n    }),\n    refetchOnMountOrArgChange: true,\n  });\n\n  return (\n    <ul>\n      {isFetching && <BounceLoader color=\"orange\" />}\n      {!isFetching &&\n        contacts &&\n        contacts.map(contact => {\n          return <ContactItem key={contact.id} contact={contact}></ContactItem>;\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport { MdPersonAddAlt1 } from 'react-icons/md';\nimport { toast } from 'react-toastify';\n\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactApi';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addContact] = useCreateContactMutation();\n\n  const handdleChange = event => {\n    const name = event.currentTarget.name;\n    const inputValue = event.target.value;\n\n    switch (name) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'number':\n        setNumber(inputValue);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const searchContact = await data.some(contact => {\n      return contact.name.toLowerCase().includes(name.toLowerCase());\n    });\n    if (searchContact) {\n      toast.error(`${name} is alredy in contacts!!!`);\n      return;\n    }\n\n    await addContact({ name, number });\n    toast.success(`${name} has added to contacts list`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handdleChange}\n      />\n      <label htmlFor=\"number\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        id=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handdleChange}\n      />\n      <button type=\"submit\">\n        Add contact\n        <MdPersonAddAlt1 color=\"#f69d3c\" size={22} />\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const debouncedOnChange = useDebouncedCallback(value => {\n    dispatch(changeFilter(value));\n  }, 500);\n\n  return (\n    <>\n      <label htmlFor=\"filter\">Find contacts by name:</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        onChange={e => debouncedOnChange(e.target.value)}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\n\nexport default function ContactPage() {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["contact","id","name","number","useDeleteContactMutation","deleteContact","isLoading","type","onClick","alert","disabled","size","color","getFilter","state","filter","value","getVisibleContacts","contacts","normalizedFilter","toLowerCase","includes","useSelector","contactsSelectors","useGetContactsQuery","undefined","selectFromResult","data","isFetching","refetchOnMountOrArgChange","map","useState","setName","setNumber","useCreateContactMutation","addContact","handdleChange","event","currentTarget","inputValue","target","handleSubmit","preventDefault","some","toast","onSubmit","autoComplete","htmlFor","pattern","title","required","onChange","dispatch","useDispatch","debouncedOnChange","useDebouncedCallback","changeFilter","e","ContactPage"],"sourceRoot":""}